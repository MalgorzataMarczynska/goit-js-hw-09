{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAAOC,SAASC,cAAc,SACXD,SAASC,cAAc,UAEhD,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACT,GAAIN,EAEF,OADAI,EAAQ,C,SAAEN,E,MAAUC,IACb,C,SAAED,E,MAAUC,GAEnBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAIb,SAASQ,IACP,MACEC,UAAUT,MAAEA,EAAKU,KAAEA,EAAIC,OAAEA,IACvBhB,EAMJ,MALwB,CACtBK,MAAOA,EAAMY,MACbF,KAAMA,EAAKE,MACXD,OAAQA,EAAOC,M,CAyBnBjB,EAAKkB,iBAAiB,UAAUC,IAC9BA,EAAMC,iBACNP,IACA,MAAMQ,EAAkBR,KAvB1B,SAA0BS,GACxB,MAAMD,EAAkBR,IACxB,IAAIU,EAAaC,OAAOH,EAAgBhB,OACpCU,EAAOS,OAAOH,EAAgBN,MAClC,IAAK,IAAIU,EAAI,EAAGA,GAAKH,EAAQG,IAE3BtB,EAAcsB,EADKF,EAAaE,EAAIV,GAEjCW,MAAK,EAACtB,SAAEA,EAAQC,MAAEA,MACjBsB,EAAA7B,GAAS8B,OAAOC,QACd,uBAAqBzB,QAAiBC,MAAU,IAGnDyB,OAAM,EAAC1B,SAAEA,EAAQC,MAAEA,MAClBsB,EAAA7B,GAAS8B,OAAOG,QACd,sBAAoB3B,QAAeC,MAAU,G,CAWrD2B,CADaR,OAAOH,EAAgBL,QACZ","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst form = document.querySelector('.form');\nconst createPromiseBtn = document.querySelector('button');\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n        return { position, delay };\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction savingData() {\n  const {\n    elements: { delay, step, amount },\n  } = form;\n  const promiseSettings = {\n    delay: delay.value,\n    step: step.value,\n    amount: amount.value,\n  };\n  return promiseSettings;\n}\n\nfunction generatePromises(number) {\n  const promiseSettings = savingData();\n  let firstDelay = Number(promiseSettings.delay);\n  let step = Number(promiseSettings.step);\n  for (let i = 1; i <= number; i++) {\n    const wholeDelay = firstDelay + i * step;\n    createPromise(i, wholeDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n}\n\nform.addEventListener('submit', event => {\n  event.preventDefault();\n  savingData(event);\n  const promiseSettings = savingData();\n  let number = Number(promiseSettings.amount);\n  generatePromises(number);\n});\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$47d4ff9957288465$var$savingData","elements","step","amount","value","addEventListener","event","preventDefault","promiseSettings","number","firstDelay","Number","i","then","$parcel$interopDefault","Notify","success","catch","failure","$47d4ff9957288465$var$generatePromises"],"version":3,"file":"03-promises.77ff005e.js.map"}